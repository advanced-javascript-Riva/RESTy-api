{"version":3,"sources":["Components/Header.js","Components/Footer.js","Components/Form.js","Components/Result.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","data-letters","React","Component","Footer","Form","props","state","url","method","onSubmit","e","console","log","preventDefault","changeHandler","setState","target","name","value","this","fetch","mode","response","json","result","data","count","resultBody","results","resultHeaders","headers","handleResults","for","id","type","onChange","onClick","fetchData","Result","JSON","stringify","body","App","undefined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.248300fe.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\nclass Header extends React.Component {\n    render() {\n        return (\n            <div className = \"headerContainer\">\n                <div className=\"navTitle\">\n                <a className=\"link link--kukuri\" href=\"#\" data-letters=\"RESTy-Api\">RESTy-Api</a>\n                </div>\n                </div>\n        )\n    } \n}\nexport default Header;","import React from 'react';\nimport './Footer.css';\nclass Footer extends React.Component {\n    render() {\n        return (\n            <div className= \"footerContainer\">\n                <div className=\"footer\">\n                <h1></h1>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Footer;","import React  from 'react'\nimport './Form.css';\nexport default class Form extends React.Component {\n    constructor(props) {\n        super(props);\n        //talks to the React Component'this'\n        this.state = {\n            // Displayed value will be this.state.url or method\n            // Displayed value will update as user types\n            // Hardcoding inital values so I don't have to keep filling it in\n            url: 'https://swapi.dev/api/people',\n            method: 'GET'\n        }\n        this.onSubmit = e => {\n            console.log(this.state);\n            e.preventDefault();\n            \n        }\n        //Event handler will update state object\n        // Using handler for all the methods below\n        this.changeHandler = e => {\n            // When some input calls changeHandler, get the name and value\n            // Use name as state prop I am setting, and set value to inputs value\n            this.setState({[e.target.name]: e.target.value});\n        }\n    }\n\n  async fetchData() {\n    const url = this.state.url;\n    try {\n      const response = await fetch(url, {\n        method: this.state.method,\n        mode: 'cors',\n      })\n      const result = await response.json();\n      const data = {\n        count: result.count,\n        resultBody: result.results,\n        resultHeaders: response.headers\n      }\n      this.props.handleResults(data);\n    } catch (err) {\n        console.log(err);\n    }\n  }\n    render() {\n        return (\n            <div className=\"formSection\">\n            <div>\n                <div className=\"urlContainer\">\n                    <label for=\"url\" id=\"urlBlock\">Enter URL here</label>\n                    <input type=\"text\" name=\"url\" value= {this.state.url} onChange= {this.changeHandler}/>\n                    <button onClick={()=> this.fetchData()} id=\"goButton\">Go</button>\n                </div>\n                <div className=\"methodButtonContainer\">\n                    <input type=\"radio\" id=\"formButton\" name=\"method\" value='GET' onChange= {this.changeHandler}/>\n                    <label for=\"get\">GET</label><br></br>\n                    <input type=\"radio\" id=\"formButton\" name=\"method\" value='POST' onChange= {this.changeHandler}/>\n                    <label for=\"post\">POST</label><br></br>\n                    <input type=\"radio\" id=\"formButton\" name=\"method\" value=\"PUT\" onChange= {this.changeHandler}/>\n                    <label for=\"put\">PUT</label><br></br>\n                    <input type=\"radio\" id=\"formButton\" name=\"method\" value=\"DELETE\" onChange= {this.changeHandler}/>\n                    <label for=\"delete\">DELETE</label><br></br>\n                </div>\n            </div>\n            <div className= \"displayedResults\">\n                 url: {this.state.url}<br/>\n                 method: {this.state.method}\n            </div>\n            </div>\n       )\n    }\n}\n","import React from 'react';\nimport './Result.css'\nexport default class Result extends React.Component {\n    render() {\n        return (\n            <div>\n            <div className=\"headers json\" >\n                {/*making json pretty*/}\n                {JSON.stringify(this.props.headers, null, 2)}\n            </div>\n            <div className=\"body json\" >\n                {/*making json pretty*/}\n                {JSON.stringify(this.props.body, null, 2)}\n            </div>\n            </div>\n        )\n    }\n}\n","import React  from 'react';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport Form from './Components/Form';\nimport Result from './Components/Result';\n\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      resultBody: undefined,\n      resultHeaders: undefined,\n    }\n  }\n  //App.js will pass this function to Form, so Form can call it\n   handleResults = results => {\n     this.setState(results);\n   }\n\n  render() {\n    //using spread operator to set vars whose values equal properties of this.state\n    const {count, resultHeaders, resultBody} = this.state;\n    return (\n     <div className=\"App\">\n       <Header/>\n       {/* handleResults is a prop that is passed to form*/}\n       <Form handleResults={this.handleResults}/>\n       <Result count={count} headers={resultHeaders} body={resultBody}/>\n      <Footer/>\n     </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}